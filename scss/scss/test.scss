
//📌참고자료
// Sass(SCSS) 완전 정복! https://heropy.blog/2018/01/31/sass/
// Sass(scss) 정리 https://velog.io/@jhyun_k/Sassscss-정리



// 💕원리 : sass,scss 는 css가 아닌 스크립팅 언어이기 떄문에 웹에 바로 적용 X ,
//전처리기를 통해  css 화 시켜야함 이것을 컴파일이라 한다.

// 💕장점 : css 와 잘 호환된다 (sass 대비)
//           코드의 가속성과 재사용성을 높여주며 심플한 표기법 → css 구조를 평준화


// 💕기능 :

    // ───────────  분할·모듈화  ──────────────
    // ✔ scss 파일이름 앞에 _를 붙이면 전처리? 같이 안됨
    // 그냥 불러와서 사용하는 파일은 _붙여서 @import 하여 사용
    // @import "flex";
    // @use "flex"; 😇


    // ───────────  중첩 (Nesting)  ──────────────
    // ✔ & (엠퍼샌드) : 상위 부모선택자 중첩
    // ✔ @at-root 중첩에서 벗어나기
    .company{
        &__item{
            width:25%;
        }
        &__link{
            display: flex;
            color:#413c3c;
            @at-root .item{color:red}
        }
    }

    // ✔ css속성중첩
    .icon{
        width:32px;
        height:32px;
        background : {
            image:url("images/icon_stripe.png");
            repeat:no-repeat;
            position:center center;
        }
    }

    // ─────────── 변수  ───────────
    // ✔ 변수의 Type : number, string, bloolens, null 이외에도 color, lists, maps 등..
    // ✔ 변수의 Scope : 지역변수, 전역변수
    .let_test{
        $test_pd:30px; // 지역변수
        padding:$test_pd;
        span{
            padding:$test_pd;
        }
    }
    // .let_test2{padding:$test_pd;} // --> 지역은 밖에서 못불러옴
    $global-padding : 40px; // 전역변수
    .let_test3{padding:$global-padding;}

    // ─────────── Mixins (Mix & Include)  ───────────
    // ✔ 사용법 : @mixin --{} 이름(--)지어 만들고, @include --; 불러와서 사용
    @mixin flex{
        display:flex;align-items:center;justify-content:center;
    }
    .item{
        @include flex;
    }
    // ✔ 인수 넣기 (파선아실 : parameter 선언, arguments는 실행)
    @mixin stripe_icon($url, $repeat, $positionX, $positionY){
        background-image:url($url);
        background-repeat:$repeat;
        background-position: $positionX $positionY;
    }
    .icon--vision{
        @include stripe_icon("image/icon.png", no-repeat, 0, 0);
    }
    // 인수 기본값 지정
    @mixin btn($width:150px, $height:55px, $pd:0 20px){
        width:100%;
        max-width:$width;
        height:$height;
        padding: $pd;
    }
    .btn-default{
        @include btn(150px, null, 0 10px); // 😇이렇게 쓰면 ..안되는건가..?
        // 😇 null을 쓰면 아예 빠져버린다. 그냥 기본값 적용하고 싶으면..?
        &--radius{border-radius: 30px;}
        &--border{border-bottom:2px solid #eee;}
    }

    // ─────────── Extend  ───────────
    // ✔ 연관있는 코드가 중복될 때 사용 (존똑일때)
    // 1) .class 가져오기
    .floating{
        background-color: #fff;
    }
    .header.search-open{
        @extend .floating;
    }
    // 2. % 로 선택자 만들기
    %active-header{
        background-color:#fff;
    }
    .header.active{
        @extend %active-header;
    }


    // ─────────── 조건문, 반복문, 함수  ───────────
    // ✔ 조건문








